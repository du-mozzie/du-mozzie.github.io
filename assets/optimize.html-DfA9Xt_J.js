import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as e,o,c,b as n,d as s,e as l,h as a}from"./app-BZQBqayr.js";const i={},u=a('<p>MySQL的一些调优经验</p><h2 id="explain" tabindex="-1"><a class="header-anchor" href="#explain"><span>EXPLAIN</span></a></h2><h3 id="什么是explain" tabindex="-1"><a class="header-anchor" href="#什么是explain"><span>什么是explain</span></a></h3><p>使用explain可以模拟优化器执行SQL查询语句，从而知道MySQL怎么处理你的SQL语句的，分析你的查询语句和表结构的性能瓶颈。</p><h3 id="explain能够干什么" tabindex="-1"><a class="header-anchor" href="#explain能够干什么"><span>explain能够干什么</span></a></h3><ul><li>读取表的顺序</li><li>哪些索引能够被使用</li><li>数据读取操作的操作类型</li><li>哪些索引能够被实际使用</li><li>表之间的引用</li><li>每张表有多少行被物理查询</li></ul><h3 id="创建一个学习用的数据库" tabindex="-1"><a class="header-anchor" href="#创建一个学习用的数据库"><span>创建一个学习用的数据库</span></a></h3><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">CREATE</span> <span class="token keyword">DATABASE</span> <span class="token comment">/*!32312 IF NOT EXISTS*/</span><span class="token identifier"><span class="token punctuation">`</span>mydb<span class="token punctuation">`</span></span> <span class="token comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span><span class="token punctuation">;</span>\n\n<span class="token keyword">USE</span> <span class="token identifier"><span class="token punctuation">`</span>mydb<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token comment">/*Table structure for table `course` */</span>\n\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">21</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token comment">/*Data for the table `course` */</span>\n\n<span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span> \n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;语文&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;高等数学&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;视听说&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;体育&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;马克思概况&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;民族理论&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;毛中特&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">&#39;计算机基础&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&#39;深度学习&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;Java程序设计&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">&#39;c语言程序设计&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">&#39;操作系统&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">&#39;计算机网络&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">&#39;计算机组成原理&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">&#39;数据结构&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token string">&#39;数据分析&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">&#39;大学物理&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;数字逻辑&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">&#39;嵌入式开发&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;需求工程&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/*Table structure for table `stu_course` */</span>\n\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>stu_course<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>stu_course<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token comment">/*Data for the table `stu_course` */</span>\n\n<span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>stu_course<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span> \n<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">/*Table structure for table `student` */</span>\n\n<span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> <span class="token keyword">IF</span> <span class="token keyword">EXISTS</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">;</span>\n\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span> <span class="token punctuation">(</span>\n  <span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>name_age<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token keyword">KEY</span> <span class="token identifier"><span class="token punctuation">`</span>id_name_age<span class="token punctuation">`</span></span> <span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span><span class="token operator">=</span><span class="token keyword">InnoDB</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token operator">=</span><span class="token number">31</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n\n<span class="token comment">/*Data for the table `student` */</span>\n\n<span class="token keyword">insert</span>  <span class="token keyword">into</span> <span class="token identifier"><span class="token punctuation">`</span>student<span class="token punctuation">`</span></span><span class="token punctuation">(</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span><span class="token punctuation">,</span><span class="token identifier"><span class="token punctuation">`</span>age<span class="token punctuation">`</span></span><span class="token punctuation">)</span> <span class="token keyword">values</span> \n<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">,</span><span class="token string">&#39;乾隆&#39;</span><span class="token punctuation">,</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">14</span><span class="token punctuation">,</span><span class="token string">&#39;关羽&#39;</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token string">&#39;刘备&#39;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token string">&#39;刘永&#39;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">21</span><span class="token punctuation">,</span><span class="token string">&#39;后裔&#39;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">,</span><span class="token string">&#39;吕子乔&#39;</span><span class="token punctuation">,</span><span class="token number">28</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">,</span><span class="token string">&#39;嬴政&#39;</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">,</span><span class="token string">&#39;孙悟空&#39;</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">&#39;安其拉&#39;</span><span class="token punctuation">,</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">&#39;宋江&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">26</span><span class="token punctuation">,</span><span class="token string">&#39;康熙&#39;</span><span class="token punctuation">,</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">29</span><span class="token punctuation">,</span><span class="token string">&#39;张伟&#39;</span><span class="token punctuation">,</span><span class="token number">26</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">,</span><span class="token string">&#39;张郃&#39;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">,</span><span class="token string">&#39;张飞&#39;</span><span class="token punctuation">,</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">27</span><span class="token punctuation">,</span><span class="token string">&#39;朱元璋&#39;</span><span class="token punctuation">,</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">,</span><span class="token string">&#39;李世民&#39;</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token string">&#39;李逵&#39;</span><span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">&#39;林冲&#39;</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">&#39;橘右京&#39;</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">,</span><span class="token string">&#39;沙和尚&#39;</span><span class="token punctuation">,</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">,</span><span class="token string">&#39;猪八戒&#39;</span><span class="token punctuation">,</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token string">&#39;王与&#39;</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">,</span><span class="token string">&#39;王建&#39;</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token string">&#39;王莽&#39;</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">,</span><span class="token string">&#39;秦叔宝&#39;</span><span class="token punctuation">,</span><span class="token number">43</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">,</span><span class="token string">&#39;程咬金&#39;</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">&#39;荆轲&#39;</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">&#39;诸葛亮&#39;</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">&#39;钟馗&#39;</span><span class="token punctuation">,</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;鲁班&#39;</span><span class="token punctuation">,</span><span class="token number">21</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个数据库实际上的业务是:学生表 - 选课表 - 课程表</p><h3 id="如何使用explain" tabindex="-1"><a class="header-anchor" href="#如何使用explain"><span>如何使用explain</span></a></h3><p>使用而<code>explain</code>很简单就是，在你书写的SQL语句加一个单词 - <code>explain</code>，然后将 <code>explain </code>+ SQL执行后会出现一个表，这个表会告诉你MySQL优化器是怎样执行你的SQL的。</p><p>就比如执行下面一句语句：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> <span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>MySQL会给你反馈下面一个信息：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>    partitions  <span class="token keyword">type</span>    possible_keys  <span class="token keyword">key</span>       key_len  ref       <span class="token keyword">rows</span>  filtered  Extra        \n<span class="token comment">------  -----------  -------  ----------  ------  -------------  --------  -------  ------  ------  --------  -------------</span>\n     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       student  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">index</span>   <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>         name_age  <span class="token number">68</span>       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token number">30</span>    <span class="token number">100.00</span>  <span class="token keyword">Using</span> <span class="token keyword">index</span>  \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体这些信息是干什么的，会对你有什么帮助，会在下面告诉你。</p><h4 id="explain各个字段代表的意思" tabindex="-1"><a class="header-anchor" href="#explain各个字段代表的意思"><span>explain各个字段代表的意思</span></a></h4><ul><li>id ：select查询的序列号，包含一组数字，表示查询中执行select子句或操作表的顺序</li><li>select_type ：查询类型 或者是 其他操作类型</li><li>table ：正在访问哪个表</li><li>partitions ：匹配的分区</li><li>type ：访问的类型</li><li>possible_keys ：显示可能应用在这张表中的索引，一个或多个，但不一定实际使用到</li><li>key ：实际使用到的索引，如果为NULL，则没有使用索引</li><li>key_len ：表示索引中使用的字节数，可通过该列计算查询中使用的索引的长度</li><li>ref ：显示索引的哪一列被使用了，如果可能的话，是一个常数，哪些列或常量被用于查找索引列上的值</li><li>rows ：根据表统计信息及索引选用情况，大致估算出找到所需的记录所需读取的行数</li><li>filtered ：查询的表行占表的百分比</li><li>Extra ：包含不适合在其它列中显示但十分重要的额外信息</li></ul><p>上面介绍了每个字段的意思，可以大体看一下，下面会逐一介绍每个字段表示的啥？该关注什么？</p><h4 id="id与table字段" tabindex="-1"><a class="header-anchor" href="#id与table字段"><span>id与table字段</span></a></h4><p>为什么要将<code>id</code>和<code>table</code>放在一起讲呢？因为通过这两个字段可以<strong>完全</strong>判断出你的每一条SQL语句的执行顺序和表的查询顺序。</p><p>先看<code>id</code>后看<code>table</code>，<code>id</code>和<code>table</code>在SQL执行判断过程中的关系就像是足球联赛的积分榜，首先一个联赛的球队排名应该先看积分，积分越高的球队排名越靠前，当两支或多只球队的积分一样高怎么办呢？那我们就看净胜球，净胜球越多的球队，排在前面。而在<code>explain</code>中你可以把id看作是球队积分，<code>table</code>当作是净胜球。</p><p>比如说我们<code>explain</code>一下这一条SQL：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>\n<span class="token keyword">SELECT</span> \n    S<span class="token punctuation">.</span>id<span class="token punctuation">,</span>S<span class="token punctuation">.</span>name<span class="token punctuation">,</span>S<span class="token punctuation">.</span>age<span class="token punctuation">,</span>C<span class="token punctuation">.</span>id<span class="token punctuation">,</span>C<span class="token punctuation">.</span>name\n<span class="token keyword">FROM</span> course C <span class="token keyword">JOIN</span> stu_course SC <span class="token keyword">ON</span> C<span class="token punctuation">.</span>id <span class="token operator">=</span> SC<span class="token punctuation">.</span>cid\n<span class="token keyword">JOIN</span> student S <span class="token keyword">ON</span> S<span class="token punctuation">.</span>id <span class="token operator">=</span> SC<span class="token punctuation">.</span>sid\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果是这样：</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>   partitions  <span class="token keyword">type</span>    possible_keys        <span class="token keyword">key</span>      key_len  ref      \n<span class="token comment">------  -----------  ------  ----------  ------  -------------------  -------  -------  ----------- </span>\n     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       SC      <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">index</span>   <span class="token keyword">PRIMARY</span>              <span class="token keyword">PRIMARY</span>  <span class="token number">8</span>        <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>     \n     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       C       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      eq_ref  <span class="token keyword">PRIMARY</span>              <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        mydb<span class="token punctuation">.</span>SC<span class="token punctuation">.</span>cid \n     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       S       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      eq_ref  <span class="token keyword">PRIMARY</span><span class="token punctuation">,</span>id_name_age  <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        mydb<span class="token punctuation">.</span>SC<span class="token punctuation">.</span>sid \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我们看到<code>id</code>全是1，那就说明光看id这个值是看不出来每个表的读取顺序的，那我们就来看<code>table</code>这一行，它的读取顺序是<strong>自上向下</strong>的，所以，这三个表的读取顺序应当是：SC - C - S。</p><p>再来看一条SQL</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> \n<span class="token keyword">FROM</span> course <span class="token keyword">AS</span> C \n<span class="token keyword">WHERE</span> C<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token punctuation">(</span>\n    <span class="token keyword">SELECT</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> stu_course <span class="token keyword">AS</span> SC \n    <span class="token keyword">WHERE</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span> <span class="token operator">=</span> \n    <span class="token punctuation">(</span>\n        <span class="token keyword">SELECT</span> \n            S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> \n        <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> S\n        <span class="token keyword">WHERE</span>  S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&quot;安其拉&quot;</span>\n    <span class="token punctuation">)</span> <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span> <span class="token keyword">LIMIT</span> <span class="token number">1</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这条语句是查询结果是：一个叫安其拉的学生选的课里面，课程<code>id</code>最小的一门课的信息，然后来看一下<code>explain</code>的结果吧！</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>   partitions  <span class="token keyword">type</span>    possible_keys  <span class="token keyword">key</span>      key_len  ref    \n<span class="token comment">------  -----------  ------  ----------  ------  -------------  -------  -------  ------  </span>\n     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>      C       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      const   <span class="token keyword">PRIMARY</span>        <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        const   \n     <span class="token number">2</span>  SUBQUERY     SC      <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     <span class="token keyword">PRIMARY</span>        <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        const  \n     <span class="token number">3</span>  SUBQUERY     S       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     name<span class="token punctuation">,</span>name_age  name     <span class="token number">63</span>       const \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>此时我们发现id是不相同的，所以我们很容易就看出表读取的顺序了是吧！C - SC - S</p><p>注意！！！！！！你仔细看一下最里面的子查询是查询的哪个表，是S这张表，然后外面一层呢？是SC这张表，最外面这一层呢？是C这张表，所以执行顺序应该是啥呢？是....是.....难道是S - SC - C吗？是<code>id</code>越大的<code>table</code>读取越在前面吗？是的！这就像刚才说的足球联赛积分，分数越高的球队的排序越靠前。</p><p>当然还有下面这种情况</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> \n<span class="token keyword">FROM</span> course <span class="token keyword">AS</span> C \n<span class="token keyword">WHERE</span> C<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> <span class="token operator">IN</span> <span class="token punctuation">(</span>\n    <span class="token keyword">SELECT</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>cid<span class="token punctuation">`</span></span> \n    <span class="token keyword">FROM</span> stu_course <span class="token keyword">AS</span> SC \n    <span class="token keyword">WHERE</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>sid<span class="token punctuation">`</span></span> <span class="token operator">=</span> \n    <span class="token punctuation">(</span>\n        <span class="token keyword">SELECT</span> \n            S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>id<span class="token punctuation">`</span></span> \n        <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> S\n        <span class="token keyword">WHERE</span>  S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">`</span>name<span class="token punctuation">`</span></span> <span class="token operator">=</span> <span class="token string">&quot;安其拉&quot;</span>\n    <span class="token punctuation">)</span>\n<span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个查询是：查询安其拉选课的课程信息</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>   partitions  <span class="token keyword">type</span>    possible_keys  <span class="token keyword">key</span>      key_len  ref           \n<span class="token comment">------  -----------  ------  ----------  ------  -------------  -------  -------  ----------- </span>\n     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>      SC      <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     <span class="token keyword">PRIMARY</span>        <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        const       \n     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>      C       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      eq_ref  <span class="token keyword">PRIMARY</span>        <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        mydb<span class="token punctuation">.</span>SC<span class="token punctuation">.</span>cid \n     <span class="token number">3</span>  SUBQUERY     S       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     name<span class="token punctuation">,</span>name_age  name     <span class="token number">63</span>       const        \n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果很明确：先看<code>id</code>应该是S表最先被读取，SC和C表<code>id</code>相同，然后table中SC更靠上，所以第二张读取的表应当是SC，最后读取C。</p><h4 id="select-type字段" tabindex="-1"><a class="header-anchor" href="#select-type字段"><span>select_type字段</span></a></h4>',39),k=a(`<li><p><code>SIMPLE</code> 简单查询，不包括子查询和<code>union</code>查询</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span> 
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">JOIN</span> stu_course <span class="token keyword">ON</span> student<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> sid
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>       partitions  <span class="token keyword">type</span>    possible_keys        <span class="token keyword">key</span>      
<span class="token comment">------  -----------  ----------  ----------  ------  -------------------  --------  </span>
     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       student     <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">index</span>   <span class="token keyword">PRIMARY</span><span class="token punctuation">,</span>id_name_age  name_age  
     <span class="token number">1</span>  <span class="token keyword">SIMPLE</span>       stu_course  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     <span class="token keyword">PRIMARY</span>              <span class="token keyword">PRIMARY</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>PRIMARY</code> 当存在子查询时，最外面的查询被标记为主查询</p></li><li><p><code>SUBQUERY</code> 子查询</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>
<span class="token keyword">SELECT</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>cid<span class="token punctuation">\`</span></span> 
<span class="token keyword">FROM</span> stu_course <span class="token keyword">AS</span> SC 
<span class="token keyword">WHERE</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>sid<span class="token punctuation">\`</span></span> <span class="token operator">=</span> 
<span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> 
        S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> 
    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> S
    <span class="token keyword">WHERE</span>  S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token operator">=</span> <span class="token string">&quot;安其拉&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>   partitions  <span class="token keyword">type</span>    possible_keys  <span class="token keyword">key</span>      key_len  ref      
<span class="token comment">------  -----------  ------  ----------  ------  -------------  -------  -------  ------ </span>
     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>      SC      <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     <span class="token keyword">PRIMARY</span>        <span class="token keyword">PRIMARY</span>  <span class="token number">4</span>        const  
     <span class="token number">2</span>  SUBQUERY     S       <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     name<span class="token punctuation">,</span>name_age  name     <span class="token number">63</span>       const   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>UNION</code> 当一个查询在<code>UNION</code>关键字之后就会出现<code>UNION</code></p></li><li><p><code>UNION RESULT</code> 连接几个表查询后的结果</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">1</span>
<span class="token keyword">UNION</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> student <span class="token keyword">WHERE</span> id <span class="token operator">=</span> <span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type   <span class="token keyword">table</span>       partitions  <span class="token keyword">type</span>    possible_keys        <span class="token keyword">key</span>      
<span class="token comment">------  ------------  ----------  ----------  ------  -------------------  ------- </span>
     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>       student     <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      const   <span class="token keyword">PRIMARY</span><span class="token punctuation">,</span>id_name_age  <span class="token keyword">PRIMARY</span>  
     <span class="token number">2</span>  <span class="token keyword">UNION</span>         student     <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      const   <span class="token keyword">PRIMARY</span><span class="token punctuation">,</span>id_name_age  <span class="token keyword">PRIMARY</span> 
<span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>  <span class="token keyword">UNION</span> RESULT  <span class="token operator">&lt;</span>union1<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">&gt;</span>  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">ALL</span>     <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>               <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>   
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面可以看到第三行<code>table</code>的值是<code>&lt;union1,2&gt;</code></p></li>`,5),r=n("p",null,[n("code",null,"DERIVED"),s(" 在"),n("code",null,"FROM"),s("列表中包含的子查询被标记为"),n("code",null,"DERIVED"),s("（衍生），MySQL 会递归执行这些子查询，把结果放在临时表中 MySQL5.7+ 进行优化了，增加了derived_merge（派生合并），默认开启，可加快查询效率")],-1),d={href:"https://link.segmentfault.com/?enc=BUIwTMLAzdCLhncnm%2FbHKw%3D%3D.VHX0ajSNf7%2B9zwXLpooXXMM3Pr%2BXu67yj2SIr2P9ENxNiyzP9Ig%2B4k7NJ5aqO9JQAI0nK9P5yoxcSyOE15b6yA%3D%3D",target:"_blank",rel:"noopener noreferrer"},m=a(`<p>当你的MySQL是5.7及以上版本时你要将derived_merge关闭后才能看到<code>DERIVED</code> 状态</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">set</span> <span class="token keyword">session</span> optimizer_switch<span class="token operator">=</span><span class="token string">&#39;derived_merge=off&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">set</span> <span class="token keyword">global</span> optimizer_switch<span class="token operator">=</span><span class="token string">&#39;derived_merge=off&#39;</span><span class="token punctuation">;</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 
<span class="token punctuation">(</span>
    <span class="token keyword">SELECT</span> <span class="token operator">*</span> 
    <span class="token keyword">FROM</span> student <span class="token keyword">AS</span> S <span class="token keyword">JOIN</span> stu_course <span class="token keyword">AS</span> SC 
    <span class="token keyword">ON</span> S<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>id<span class="token punctuation">\`</span></span> <span class="token operator">=</span> SC<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>sid<span class="token punctuation">\`</span></span>
<span class="token punctuation">)</span> <span class="token keyword">AS</span> SSC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>    id  select_type  <span class="token keyword">table</span>       partitions  <span class="token keyword">type</span>    possible_keys        <span class="token keyword">key</span>       
<span class="token comment">------  -----------  ----------  ----------  ------  -------------------  -------- </span>
     <span class="token number">1</span>  <span class="token keyword">PRIMARY</span>      \\<span class="token operator">&lt;</span>derived2\\<span class="token operator">&gt;</span>  <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">ALL</span>     <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>               <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>    
     <span class="token number">2</span>  DERIVED      S           <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      <span class="token keyword">index</span>   <span class="token keyword">PRIMARY</span><span class="token punctuation">,</span>id_name_age  name_age 
     <span class="token number">2</span>  DERIVED      SC          <span class="token punctuation">(</span><span class="token boolean">NULL</span><span class="token punctuation">)</span>      ref     <span class="token keyword">PRIMARY</span>              <span class="token keyword">PRIMARY</span>  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面我们观察，最外层的主查询的表是&lt;derived2&gt;,而S和SC表的<code>select_type</code>都是<code>DERIVED</code>,这说明S和SC都被用来做衍生查询，而这两张表查询的结果组成了名为&lt;derived2&gt;的衍生表，而衍生表的命名就是<code>&lt;select_type + id&gt;</code>。</p>`,5),b=a(`<h4 id="partitions字段" tabindex="-1"><a class="header-anchor" href="#partitions字段"><span>partitions字段</span></a></h4><p>该列显示的为分区表命中的分区情况。非分区表该字段为空（null）。</p><h4 id="type字段" tabindex="-1"><a class="header-anchor" href="#type字段"><span>type字段</span></a></h4><p>type所显示的是查询使用了哪种类型，所有type按照从好到坏的顺序排列如下：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>system &gt; const &gt; eq_ref &gt; ref &gt; range &gt; index &gt; all
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><p>system：表只有一行记录（等于系统表），这是const类型的特列，平时不会出现，这个也可以忽略不计；</p></li><li><p>const：表示通过索引一次就找到了，const用于primary key或者unique索引。因为只匹配一行数据，所以很快。如将主键置于where语句中，MySQL就能将该查询转换为一个常量；</p></li><li><p>eq_ref：唯一性索引扫描，对于每个索引键，表中只有一条记录与之匹配。常见于主键或唯一索引扫描；</p></li><li><p>ref：非唯一性索引扫描，返回匹配某个单独值的所有行，本质上也是一种索引访问，它返回所有匹配某个单独值的行，然而，它可能会找到多个符合条件的行，所以他应该属于查找和扫描的混合体；</p></li><li><p>range：只检索给定范围的行，使用一个索引来选择行，key列显示使用了哪个索引，一般就是在你的where语句中出现between, &lt;, &gt;, in等的查询，这种范围扫描索引比全表扫描要好，因为它只需要开始于索引的某一点，而结束于另一点，不用扫描全部索引；</p></li><li><p>index：全表扫描，index与all区别为index类型只遍历索引树。这通常比all快，因为索引文件通常比数据文件小。（也就是说虽然all和index都是读全表，但index是从索引中读取的，而all是从硬盘读取的）；</p></li><li><p>all：全表扫描，将遍历全表以找到匹配的行，避免 all</p></li></ul><h4 id="possible-keys字段" tabindex="-1"><a class="header-anchor" href="#possible-keys字段"><span>possible_keys字段</span></a></h4><p>这个表里面存在且可能会被使用的索引，可能会在这个字段下面出现，但是一般都以<code>key</code>为准。</p><h4 id="key字段" tabindex="-1"><a class="header-anchor" href="#key字段"><span>key字段</span></a></h4><p>实际使用的索引，如果为<code>null</code>,则没有使用索引，否则会显示你使用了哪些索引，查询中若使用了覆盖索引（查询的列刚好是索引），则该索引仅出现在<code>key</code>列表。</p><h4 id="ref字段" tabindex="-1"><a class="header-anchor" href="#ref字段"><span>ref字段</span></a></h4><p>显示哪些列被使用了，如果可能的话，最好是一个常数。哪些列或常量被用于查找索引列上的值。</p><h4 id="rows字段和filter字段" tabindex="-1"><a class="header-anchor" href="#rows字段和filter字段"><span>rows字段和Filter字段</span></a></h4><p><code>rows</code>是根据表的统计信息和索引的选用情况，优化器大概帮你估算出你执行这行函数所需要查询的行数。</p><p><code>Filter</code>是查询的行数与总行数的比值。其实作用与<code>rows</code>差不多，都是数值越小，效率越高。</p><h4 id="extra字段" tabindex="-1"><a class="header-anchor" href="#extra字段"><span>Extra字段</span></a></h4><p>这一字段包含不适合在其他列显示，但是也非常重要的额外信息。</p><ul><li><p><code>Using filesort</code> 表示当SQL中有一个地方需要对一些数据进行排序的时候，优化器找不到能够使用的索引，所以只能使用外部的索引排序，外部排序就不断的在磁盘和内存中交换数据，这样就摆脱不了很多次磁盘IO，以至于SQL执行的效率很低。反之呢？由于索引的底层是B+Tree实现的，他的叶子节点本来就是有序的，这样的查询能不爽吗？</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>
<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> course <span class="token keyword">AS</span> C <span class="token keyword">ORDER</span> <span class="token keyword">BY</span> C<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-pgsql line-numbers-mode" data-ext="pgsql" data-title="pgsql"><pre class="language-pgsql"><code> type    possible_keys  key     key_len  ref       rows  filtered  Extra           
 ------  -------------  ------  -------  ------  ------  --------  ----------------
 ALL     (NULL)         (NULL)  (NULL)   (NULL)      20    100.00  Using filesort  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>没有给<code>C.name</code>建立索引，所以在根据<code>C.name</code>排序的时候，他就使用了外部排序</p></li><li><p><code>Using tempporary</code> 表示在对MySQL查询结果进行排序时，使用了临时表,,这样的查询效率是比外部排序更低的，常见于<code>order by</code>和<code>group by</code>。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">EXPLAIN</span>
<span class="token keyword">SELECT</span> C<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span> <span class="token keyword">FROM</span> course <span class="token keyword">AS</span> C <span class="token keyword">GROUP</span> <span class="token keyword">BY</span> C<span class="token punctuation">.</span><span class="token identifier"><span class="token punctuation">\`</span>name<span class="token punctuation">\`</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-pgsql line-numbers-mode" data-ext="pgsql" data-title="pgsql"><pre class="language-pgsql"><code>possible_keys  key     key_len  ref       rows  filtered  Extra                            
-------------  ------  -------  ------  ------  --------  ---------------------------------
(NULL)         (NULL)  (NULL)   (NULL)      20    100.00  Using temporary; Using filesort  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面这个查询就是同时触发了<code>Using temporary</code>和<code>Using filesort</code>，可谓是雪上加霜。</p></li><li><p><code>Using index</code> 表示使用了索引，很优秀👍。</p></li><li><p><code>Using where</code> 使用了<code>where</code>但是好像没啥用。</p></li><li><p><code>Using join buffer</code> 表明使用了连接缓存,比如说在查询的时候，多表<code>join</code>的次数非常多，那么将配置文件中的缓冲区的<code>join buffer</code>调大一些。</p></li><li><p><code>impossible where</code> 筛选条件没能筛选出任何东西</p></li><li><p><code>distinct</code> 优化<code>distinct</code>操作，在找到第一匹配的元组后即停止找同样值的动作</p></li></ul><h2 id="mysql数据库cpu飙升如何定位分析" tabindex="-1"><a class="header-anchor" href="#mysql数据库cpu飙升如何定位分析"><span>MySQL数据库CPU飙升如何定位分析</span></a></h2><blockquote><p>使用top观察mysqld的cpu利用率（确认问题是由mysqld产生的）</p></blockquote><ol><li><p>切换到常用的数据库</p></li><li><p>使用 <strong>show full processlist</strong> 查看会话</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611223146267.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>观察是哪些sql消耗了资源，其中重点观察state指标</p></li><li><p>定位到具体sql</p></li></ol><blockquote><p>使用pidstate</p></blockquote><ol><li><p>定位到线程</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224045171.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>在数据库 <strong>performance_schema.threads</strong> 中记录了 thread_os_id 找到执行的sql</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224317970.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>根据操作系统id可以到 <strong>performance_schema.processlist</strong> 表找到对应的会话</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224347159.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>在会话中即可定位到问题sql</p></li></ol>`,23);function v(y,g){const p=e("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[k,n("li",null,[r,n("p",null,[n("a",d,[s("如果你想了解更详细的派生合并请点击这里"),l(p)])]),m])]),b])}const h=t(i,[["render",v],["__file","optimize.html.vue"]]),f=JSON.parse('{"path":"/code/mysql/optimize.html","title":"调优","lang":"zh-CN","frontmatter":{"order":7,"title":"调优","date":"2021-09-16T00:00:00.000Z","category":"MySQL","tag":"MySQL","timeline":true,"article":true,"description":"MySQL的一些调优经验 EXPLAIN 什么是explain 使用explain可以模拟优化器执行SQL查询语句，从而知道MySQL怎么处理你的SQL语句的，分析你的查询语句和表结构的性能瓶颈。 explain能够干什么 读取表的顺序 哪些索引能够被使用 数据读取操作的操作类型 哪些索引能够被实际使用 表之间的引用 每张表有多少行被物理查询 创建一个...","head":[["meta",{"property":"og:url","content":"https://du-mozzie.github.io/code/mysql/optimize.html"}],["meta",{"property":"og:title","content":"调优"}],["meta",{"property":"og:description","content":"MySQL的一些调优经验 EXPLAIN 什么是explain 使用explain可以模拟优化器执行SQL查询语句，从而知道MySQL怎么处理你的SQL语句的，分析你的查询语句和表结构的性能瓶颈。 explain能够干什么 读取表的顺序 哪些索引能够被使用 数据读取操作的操作类型 哪些索引能够被实际使用 表之间的引用 每张表有多少行被物理查询 创建一个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611223146267.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-15T06:23:54.000Z"}],["meta",{"property":"article:author","content":"mozzie"}],["meta",{"property":"article:tag","content":"MySQL"}],["meta",{"property":"article:published_time","content":"2021-09-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-15T06:23:54.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"调优\\",\\"image\\":[\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611223146267.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224045171.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224317970.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20240611224347159.png\\"],\\"datePublished\\":\\"2021-09-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-15T06:23:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mozzie\\",\\"url\\":\\"https://du-mozzie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"EXPLAIN","slug":"explain","link":"#explain","children":[{"level":3,"title":"什么是explain","slug":"什么是explain","link":"#什么是explain","children":[]},{"level":3,"title":"explain能够干什么","slug":"explain能够干什么","link":"#explain能够干什么","children":[]},{"level":3,"title":"创建一个学习用的数据库","slug":"创建一个学习用的数据库","link":"#创建一个学习用的数据库","children":[]},{"level":3,"title":"如何使用explain","slug":"如何使用explain","link":"#如何使用explain","children":[{"level":4,"title":"explain各个字段代表的意思","slug":"explain各个字段代表的意思","link":"#explain各个字段代表的意思","children":[]},{"level":4,"title":"id与table字段","slug":"id与table字段","link":"#id与table字段","children":[]},{"level":4,"title":"select_type字段","slug":"select-type字段","link":"#select-type字段","children":[]},{"level":4,"title":"partitions字段","slug":"partitions字段","link":"#partitions字段","children":[]},{"level":4,"title":"type字段","slug":"type字段","link":"#type字段","children":[]},{"level":4,"title":"possible_keys字段","slug":"possible-keys字段","link":"#possible-keys字段","children":[]},{"level":4,"title":"key字段","slug":"key字段","link":"#key字段","children":[]},{"level":4,"title":"ref字段","slug":"ref字段","link":"#ref字段","children":[]},{"level":4,"title":"rows字段和Filter字段","slug":"rows字段和filter字段","link":"#rows字段和filter字段","children":[]},{"level":4,"title":"Extra字段","slug":"extra字段","link":"#extra字段","children":[]}]}]},{"level":2,"title":"MySQL数据库CPU飙升如何定位分析","slug":"mysql数据库cpu飙升如何定位分析","link":"#mysql数据库cpu飙升如何定位分析","children":[]}],"git":{"createdTime":1718117054000,"updatedTime":1723703034000,"contributors":[{"name":"du","email":"25484255238@qq.com","commits":4}]},"readingTime":{"minutes":12.28,"words":3685},"filePathRelative":"code/mysql/optimize.md","localizedDate":"2021年9月16日","excerpt":"<p>MySQL的一些调优经验</p>","autoDesc":true}');export{h as comp,f as data};
