import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,h as t}from"./app-C9gOSVcS.js";const p={},e=t(`<p>Spring 提供了许多种类的控制器方法参数解析器</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMethodArgumentResolver</span><span class="token annotation punctuation">@abbc908</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMapMethodArgumentResolver</span><span class="token annotation punctuation">@44afefd5</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PathVariableMethodArgumentResolver</span><span class="token annotation punctuation">@9a7a808</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PathVariableMapMethodArgumentResolver</span><span class="token annotation punctuation">@72209d93</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MatrixVariableMethodArgumentResolver</span><span class="token annotation punctuation">@2687f956</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MatrixVariableMapMethodArgumentResolver</span><span class="token annotation punctuation">@1ded7b14</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletModelAttributeMethodProcessor</span><span class="token annotation punctuation">@29be7749</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestResponseBodyMethodProcessor</span><span class="token annotation punctuation">@5f84abe8</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestPartMethodArgumentResolver</span><span class="token annotation punctuation">@4650a407</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestHeaderMethodArgumentResolver</span><span class="token annotation punctuation">@30135202</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestHeaderMapMethodArgumentResolver</span><span class="token annotation punctuation">@6a4d7f76</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletCookieValueMethodArgumentResolver</span><span class="token annotation punctuation">@10ec523c</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ExpressionValueMethodArgumentResolver</span><span class="token annotation punctuation">@53dfacba</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>SessionAttributeMethodArgumentResolver</span><span class="token annotation punctuation">@79767781</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestAttributeMethodArgumentResolver</span><span class="token annotation punctuation">@78411116</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletRequestMethodArgumentResolver</span><span class="token annotation punctuation">@aced190</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletResponseMethodArgumentResolver</span><span class="token annotation punctuation">@245a060f</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>HttpEntityMethodProcessor</span><span class="token annotation punctuation">@6edaa77a</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RedirectAttributesMethodArgumentResolver</span><span class="token annotation punctuation">@1e63d216</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ModelMethodProcessor</span><span class="token annotation punctuation">@62ddd21b</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>MapMethodProcessor</span><span class="token annotation punctuation">@16c3ca31</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ErrorsMethodArgumentResolver</span><span class="token annotation punctuation">@2d195ee4</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>SessionStatusMethodArgumentResolver</span><span class="token annotation punctuation">@2d6aca33</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>UriComponentsBuilderMethodArgumentResolver</span><span class="token annotation punctuation">@21ab988f</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>PrincipalMethodArgumentResolver</span><span class="token annotation punctuation">@29314cc9</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>RequestParamMethodArgumentResolver</span><span class="token annotation punctuation">@4e38d975</span>
<span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>mvc<span class="token punctuation">.</span>method<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span>ServletModelAttributeMethodProcessor</span><span class="token annotation punctuation">@35f8a9d3</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>定义一个包含多个不同种类参数的控制器方法：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span>
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;name1&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> name1<span class="token punctuation">,</span> 
            <span class="token class-name">String</span> name2<span class="token punctuation">,</span>                       
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;age&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> age<span class="token punctuation">,</span>     
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;home&quot;</span><span class="token punctuation">,</span> defaultValue <span class="token operator">=</span> <span class="token string">&quot;\${JAVA_HOME}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> home1<span class="token punctuation">,</span> 
            <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;file&quot;</span><span class="token punctuation">)</span> <span class="token class-name">MultipartFile</span> file<span class="token punctuation">,</span> 
            <span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@RequestHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> header<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@CookieValue</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> token<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">&quot;\${JAVA_HOME}&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> home2<span class="token punctuation">,</span> 
            <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>
            <span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> user1<span class="token punctuation">,</span>
            <span class="token class-name">User</span> user2<span class="token punctuation">,</span> 
            <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token annotation punctuation">@Data</span>
<span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">User</span> <span class="token punctuation">{</span>
    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>
    <span class="token keyword">private</span> <span class="token keyword">int</span> age<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>将控制器方法封装成 HandlerMethod 并打印方法中每个参数的信息：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// 控制器方法封装成 HandlerMethod</span>
    <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> annotations <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>parameter<span class="token punctuation">.</span><span class="token function">getParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> appendAt <span class="token operator">=</span> annotations<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;@&quot;</span> <span class="token operator">+</span> annotations <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置参数名解析器</span>
        parameter<span class="token punctuation">.</span><span class="token function">initParameterNameDiscovery</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] &quot;</span> <span class="token operator">+</span> appendAt <span class="token operator">+</span>
                parameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/1711028501951-d34963ff-5fc9-46b5-89d4-b68f3059bb91.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="requestparam" tabindex="-1"><a class="header-anchor" href="#requestparam"><span>@RequestParam</span></a></h2><p>@RequestParam 注解的解析需要使用到 RequestParamMethodArgumentResolver 参数解析器。构造时需要两个参数：</p><ul><li>beanFactory：Bean 工厂对象。需要解析 \${} 时，就需要指定 Bean 工厂对象</li><li>useDefaultResolution：布尔类型参数。为 false 表示只解析添加了 @RequestParam 注解的参数，为 true 针对未添加 @RequestParam 注解的参数也使用该参数解析器进行解析。</li></ul><p>RequestParamMethodArgumentResolver 利用 resolveArgument() 方法完成参数的解析，该方法需要传递四个参数：</p><ul><li>parameter：参数对象</li><li>mavContainer：ModelAndView 容器，用来存储中间的 Model 结果</li><li>webRequest：由 ServletWebRequest 封装后的请求对象</li><li>binderFactory：数据绑定工厂，用于完成对象绑定和类型转换，比如将字符串类型的 18 转换成整型</li></ul><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token class-name">AnnotationConfigApplicationContext</span> context <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AnnotationConfigApplicationContext</span><span class="token punctuation">(</span><span class="token class-name">WebConfig</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">ConfigurableListableBeanFactory</span> beanFactory <span class="token operator">=</span> context<span class="token punctuation">.</span><span class="token function">getBeanFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token function">mockRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 控制器方法封装成 HandlerMethod</span>
    <span class="token class-name">Method</span> method <span class="token operator">=</span> <span class="token class-name">Controller</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">getMethod</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">MultipartFile</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span>
            <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> <span class="token class-name">User</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">HandlerMethod</span> handlerMethod <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethod</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Controller</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> method<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 准备对象绑定与类型转换</span>
    <span class="token class-name">ServletRequestDataBinderFactory</span> binderFactory <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ServletRequestDataBinderFactory</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 准备 ModelAndViewContainer 用来存储中间的 Model 结果</span>
    <span class="token class-name">ModelAndViewContainer</span> container <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ModelAndViewContainer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
        <span class="token class-name">RequestParamMethodArgumentResolver</span> resolver <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token class-name">String</span> annotations <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span>parameter<span class="token punctuation">.</span><span class="token function">getParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">annotationType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">joining</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> appendAt <span class="token operator">=</span> annotations<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token string">&quot;@&quot;</span> <span class="token operator">+</span> annotations <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">// 设置参数名解析器</span>
        parameter<span class="token punctuation">.</span><span class="token function">initParameterNameDiscovery</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">DefaultParameterNameDiscoverer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> paramInfo <span class="token operator">=</span> <span class="token string">&quot;[&quot;</span> <span class="token operator">+</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterIndex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot;] &quot;</span> <span class="token operator">+</span> appendAt <span class="token operator">+</span>
                parameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getSimpleName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>resolver<span class="token punctuation">.</span><span class="token function">supportsParameter</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> resolver<span class="token punctuation">.</span><span class="token function">resolveArgument</span><span class="token punctuation">(</span>parameter<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> binderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Objects</span><span class="token punctuation">.</span><span class="token function">requireNonNull</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo <span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2 <span class="token operator">-&gt;</span> lisi
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>Integer</span>
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>String</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token keyword">class</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@f2ff811</span>
<span class="token class-name">Exception</span> in thread <span class="token string">&quot;main&quot;</span> <span class="token class-name"><span class="token namespace">java<span class="token punctuation">.</span>lang<span class="token punctuation">.</span></span>IllegalStateException</span><span class="token operator">:</span> <span class="token class-name">Optional</span> <span class="token keyword">int</span> parameter <span class="token char">&#39;id&#39;</span> is present but cannot be translated into a <span class="token keyword">null</span> value due <span class="token keyword">to</span> <span class="token namespace">being</span> declared as a primitive <span class="token class-name"><span class="token namespace">type<span class="token punctuation">.</span></span> Consider</span> declaring it as object wrapper <span class="token keyword">for</span> the corresponding primitive type<span class="token punctuation">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>控制器方法 test() 的前 5 个参数解析成功，但在解析第 6 个参数时产生了异常。</p><p>这是因为在构造 RequestParamMethodArgumentResolver 对象时，将 useDefaultResolution 设置为 true，针对未添加 @RequestParam 注解的参数都使用该参数解析器进行解析。第 6 个参数需要的 id 信息使用该解析器解析得到的结果是 null，无法将 null 值赋值给基本类型 int，显然第 6 个及其以后的参数应该使用其他参数解析器进行解析。</p><p>多个参数解析器的组合 - 组合模式</p><p>不同种类的参数需要不同的参数解析器，当前使用的参数解析器不支持当前参数的解析时，就应该换一个参数解析器进行解析。</p><p>可以将所有参数解析器添加到一个集合中，然后遍历这个集合，实现上述需求。</p><p>Spring 提供了名为 HandlerMethodArgumentResolverComposite 的类，对上述逻辑进行封装。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
                <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
                <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>composite<span class="token punctuation">.</span><span class="token function">supportsParameter</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> composite<span class="token punctuation">.</span><span class="token function">resolveArgument</span><span class="token punctuation">(</span>parameter<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> binderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo <span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="pathvariable" tabindex="-1"><a class="header-anchor" href="#pathvariable"><span>@PathVariable</span></a></h2><p>@PathVariable 注解的解析需要使用到 PathVariableMethodArgumentResolver 参数解析器。构造时无需传入任何参数。</p><p>使用该解析器需要一个 Map 集合，该 Map 集合是 @RequestMapping 注解上指定的路径和实际 URL 路径进行匹配后，得到的路径上的参数与实际路径上的值的关系（获取这个 Map 并将其设置给 request 作用域由 HandlerMapping 完成）。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 RequestParamMethodArgumentResolver 参数解析器的构造，将 useDefaultResolution 设置为 false，让程序 暂时 不抛出异常。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@11c9af63</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="requestheader" tabindex="-1"><a class="header-anchor" href="#requestheader"><span>@RequestHeader</span></a></h2><p>@RequestHeader 注解的解析需要使用到 RequestHeaderMethodArgumentResolver 参数解析器。构造时需要传入一个 Bean 工厂对象。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@3943a2be</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="cookievalue" tabindex="-1"><a class="header-anchor" href="#cookievalue"><span>@CookieValue</span></a></h2><p>@CookieValue 注解的解析需要使用到 ServletCookieValueMethodArgumentResolver 参数解析器。构造时需要传入一个 Bean 工厂对象。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@1329eff</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="value" tabindex="-1"><a class="header-anchor" href="#value"><span>@Value</span></a></h2><p>@Value 注解的解析需要使用到 ExpressionValueMethodArgumentResolver 参数解析器。构造时需要传入一个 Bean 工厂对象。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @Value</span>
            <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@46fa7c39</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@Value</span> <span class="token class-name">String</span> home2 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="httpservletrequest" tabindex="-1"><a class="header-anchor" href="#httpservletrequest"><span>HttpServletRequest</span></a></h2><p>HttpServletRequest 类型的参数的解析需要使用到 ServletRequestMethodArgumentResolver 参数解析器。构造时无需传入任何参数。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @Value</span>
            <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 HttpServletRequest</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@5f683daf</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@Value</span> <span class="token class-name">String</span> home2 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span><span class="token annotation punctuation">@152aa092</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ServletRequestMethodArgumentResolver 参数解析器不仅可以解析 HttpServletRequest 类型的参数，还支持许多其他类型的参数，其支持的参数类型可在 supportsParameter() 方法中看到：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">supportsParameter</span><span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">Class</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span><span class="token punctuation">&gt;</span></span> paramType <span class="token operator">=</span> parameter<span class="token punctuation">.</span><span class="token function">getParameterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">WebRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">ServletRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">MultipartRequest</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">HttpSession</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span>pushBuilder <span class="token operator">!=</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span> pushBuilder<span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token punctuation">(</span><span class="token class-name">Principal</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>parameter<span class="token punctuation">.</span><span class="token function">hasParameterAnnotations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">InputStream</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">Reader</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">.</span><span class="token function">isAssignableFrom</span><span class="token punctuation">(</span>paramType<span class="token punctuation">)</span> <span class="token operator">||</span>
            <span class="token class-name">HttpMethod</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> paramType <span class="token operator">||</span>
            <span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> paramType <span class="token operator">||</span>
            <span class="token class-name">TimeZone</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> paramType <span class="token operator">||</span>
            <span class="token class-name">ZoneId</span><span class="token punctuation">.</span><span class="token keyword">class</span> <span class="token operator">==</span> paramType<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="modelattribute" tabindex="-1"><a class="header-anchor" href="#modelattribute"><span>@ModelAttribute</span></a></h2><p>@ModelAttribute 注解的解析需要使用到 ServletModelAttributeMethodProcessor 参数解析器。构造时需要传入一个布尔类型的值。为 false 时，表示 @ModelAttribute 不是不必须的，即是必须的。</p><p>针对 @ModelAttribute(&quot;abc&quot;) User user1 和 User user2 两种参数来说，尽管后者没有使用 @ModelAttribute 注解，但它们使用的是同一种解析器。</p><p>添加两个 ServletModelAttributeMethodProcessor 参数解析器，先解析带 @ModelAttribute 注解的参数，再解析不带 @ModelAttribute 注解的参数。</p><p>通过 ServletModelAttributeMethodProcessor 解析得到的数据还会被存入 ModelAndViewContainer 中。存储的数据结构是一个 Map，其 key 为 @ModelAttribute 注解指定的 value 值，在未显式指定的情况下，默认为对象类型的首字母小写对应的字符串。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">Controller</span> <span class="token punctuation">{</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test</span><span class="token punctuation">(</span>
		<span class="token comment">// 指定 value</span>
        <span class="token annotation punctuation">@ModelAttribute</span><span class="token punctuation">(</span><span class="token string">&quot;abc&quot;</span><span class="token punctuation">)</span> <span class="token class-name">User</span> user1<span class="token punctuation">,</span> <span class="token comment">// name=zhang&amp;age=18</span>
        <span class="token class-name">User</span> user2<span class="token punctuation">,</span> <span class="token comment">// name=zhang&amp;age=18</span>
        <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3 <span class="token comment">// json</span>
    <span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @Value</span>
            <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 HttpServletRequest</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @ModelAttribute，且不能省略</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>composite<span class="token punctuation">.</span><span class="token function">supportsParameter</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">Object</span> v <span class="token operator">=</span> composite<span class="token punctuation">.</span><span class="token function">resolveArgument</span><span class="token punctuation">(</span>parameter<span class="token punctuation">,</span> container<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">ServletWebRequest</span><span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">,</span> binderFactory<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo <span class="token operator">+</span> <span class="token string">&quot; -&gt; &quot;</span> <span class="token operator">+</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// 打印模型数据</span>
            <span class="token class-name">ModelMap</span> modelMap <span class="token operator">=</span> container<span class="token punctuation">.</span><span class="token function">getModel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">MapUtils</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>modelMap<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;模型数据: &quot;</span> <span class="token operator">+</span> modelMap<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>paramInfo<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@2beee7ff</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@Value</span> <span class="token class-name">String</span> home2 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span><span class="token annotation punctuation">@5fa07e12</span>
<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">User</span> user1 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
模型数据<span class="token operator">:</span> <span class="token punctuation">{</span>abc<span class="token operator">=</span><span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BindingResult</span><span class="token punctuation">.</span>abc<span class="token operator">=</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BeanPropertyBindingResult</span><span class="token operator">:</span> <span class="token number">0</span> errors<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token class-name">User</span> user2 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
模型数据<span class="token operator">:</span> <span class="token punctuation">{</span>abc<span class="token operator">=</span><span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BindingResult</span><span class="token punctuation">.</span>abc<span class="token operator">=</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BeanPropertyBindingResult</span><span class="token operator">:</span> <span class="token number">0</span> errors<span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BindingResult</span><span class="token punctuation">.</span>user<span class="token operator">=</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BeanPropertyBindingResult</span><span class="token operator">:</span> <span class="token number">0</span> errors<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
模型数据<span class="token operator">:</span> <span class="token punctuation">{</span>abc<span class="token operator">=</span><span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BindingResult</span><span class="token punctuation">.</span>abc<span class="token operator">=</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BeanPropertyBindingResult</span><span class="token operator">:</span> <span class="token number">0</span> errors<span class="token punctuation">,</span> user<span class="token operator">=</span><span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BindingResult</span><span class="token punctuation">.</span>user<span class="token operator">=</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>validation<span class="token punctuation">.</span></span>BeanPropertyBindingResult</span><span class="token operator">:</span> <span class="token number">0</span> errors<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@RequestBody User user3 参数也被 ServletModelAttributeMethodProcessor 解析了，如果想使其数据通过 JSON 数据转换而来，则需要使用另一个参数解析器。</p><h2 id="requestbody" tabindex="-1"><a class="header-anchor" href="#requestbody"><span>@RequestBody</span></a></h2><p>@RequestBody 注解的解析需要使用到 RequestResponseBodyMethodProcessor 参数解析器。构造时需要传入一个消息转换器列表。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @Value</span>
            <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 HttpServletRequest</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @ModelAttribute，且不能省略</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@5e17553a</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@Value</span> <span class="token class-name">String</span> home2 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span><span class="token annotation punctuation">@13bc8645</span>
<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">User</span> user1 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token class-name">User</span> user2 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@RequestBody User user3 参数数据通过 JSON 数据得到，与上一节的解析进行区分。</p><p>除此之外，添加的参数解析器顺序也影响着解析结果：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>先添加解析 @ModelAttribute 注解的解析器，再添加解析 @RequestBody 注解的解析器，最后添加解析省略了 @ModelAttribute 注解的解析器。如果更换最后两个解析器的顺序，那么 @RequestBody User user3 将会被 ServletModelAttributeMethodProcessor 解析，而不是 RequestResponseBodyMethodProcessor。</p><p>因此 String name2 参数也能通过添加同种参数但不同构造参数的解析器进行解析，注意添加的解析器的顺序，先处理对象，再处理单个参数：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span>
    <span class="token comment">// --snip--</span>

    <span class="token comment">// 解析每个参数值</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">MethodParameter</span> parameter <span class="token operator">:</span> handlerMethod<span class="token punctuation">.</span><span class="token function">getMethodParameters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// 多个参数解析器的组合</span>
        <span class="token class-name">HandlerMethodArgumentResolverComposite</span> composite <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HandlerMethodArgumentResolverComposite</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        composite<span class="token punctuation">.</span><span class="token function">addResolvers</span><span class="token punctuation">(</span>
            <span class="token comment">// useDefaultResolution 为 false 表示必须添加 @RequestParam 注解</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @PathVariable</span>
            <span class="token keyword">new</span> <span class="token class-name">PathVariableMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @RequestHeader</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestHeaderMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @CookieValue</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletCookieValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @Value</span>
            <span class="token keyword">new</span> <span class="token class-name">ExpressionValueMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 HttpServletRequest</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletRequestMethodArgumentResolver</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token comment">// 解析 @ModelAttribute，且不能省略</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestResponseBodyMethodProcessor</span><span class="token punctuation">(</span><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">singletonList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">MappingJackson2HttpMessageConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">ServletModelAttributeMethodProcessor</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token keyword">new</span> <span class="token class-name">RequestParamMethodArgumentResolver</span><span class="token punctuation">(</span>beanFactory<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
        <span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// --snip--</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> name1 <span class="token operator">-&gt;</span> zhangsan
<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token class-name">String</span> name2 <span class="token operator">-&gt;</span> lisi
<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token keyword">int</span> age <span class="token operator">-&gt;</span> <span class="token number">18</span>
<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">String</span> home1 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestParam</span> <span class="token class-name">MultipartFile</span> file <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span>$<span class="token class-name">StandardMultipartFile</span><span class="token annotation punctuation">@5e17553a</span>
<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@PathVariable</span> <span class="token keyword">int</span> id <span class="token operator">-&gt;</span> <span class="token number">123</span>
<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestHeader</span> <span class="token class-name">String</span> header <span class="token operator">-&gt;</span> application<span class="token operator">/</span>json
<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@CookieValue</span> <span class="token class-name">String</span> token <span class="token operator">-&gt;</span> <span class="token number">123456</span>
<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@Value</span> <span class="token class-name">String</span> home2 <span class="token operator">-&gt;</span> <span class="token class-name">D</span><span class="token operator">:</span>\\environment\\<span class="token constant">JDK1</span><span class="token punctuation">.</span><span class="token number">8</span>
<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token class-name">HttpServletRequest</span> request <span class="token operator">-&gt;</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>multipart<span class="token punctuation">.</span>support<span class="token punctuation">.</span></span>StandardMultipartHttpServletRequest</span><span class="token annotation punctuation">@13bc8645</span>
<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@ModelAttribute</span> <span class="token class-name">User</span> user1 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token class-name">User</span> user2 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>张三<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">)</span>
<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">User</span> user3 <span class="token operator">-&gt;</span> <span class="token class-name">A21<span class="token punctuation">.</span>User</span><span class="token punctuation">(</span>name<span class="token operator">=</span>李四<span class="token punctuation">,</span> age<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,56),o=[e];function c(l,u){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","parameter-resolver.html.vue"]]),d=JSON.parse('{"path":"/code/spring/mvc/parameter-resolver.html","title":"参数解析器","lang":"zh-CN","frontmatter":{"order":2,"title":"参数解析器","date":"2021-10-08T00:00:00.000Z","category":["Spring MVC"],"tag":["Spring MVC"],"timeline":true,"article":true,"description":"Spring 提供了许多种类的控制器方法参数解析器 定义一个包含多个不同种类参数的控制器方法： 将控制器方法封装成 HandlerMethod 并打印方法中每个参数的信息： @RequestParam @RequestParam 注解的解析需要使用到 RequestParamMethodArgumentResolver 参数解析器。构造时需要两个参数：...","head":[["meta",{"property":"og:url","content":"https://du-mozzie.github.io/code/spring/mvc/parameter-resolver.html"}],["meta",{"property":"og:title","content":"参数解析器"}],["meta",{"property":"og:description","content":"Spring 提供了许多种类的控制器方法参数解析器 定义一个包含多个不同种类参数的控制器方法： 将控制器方法封装成 HandlerMethod 并打印方法中每个参数的信息： @RequestParam @RequestParam 注解的解析需要使用到 RequestParamMethodArgumentResolver 参数解析器。构造时需要两个参数：..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/1711028501951-d34963ff-5fc9-46b5-89d4-b68f3059bb91.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-07-31T02:27:42.000Z"}],["meta",{"property":"article:author","content":"mozzie"}],["meta",{"property":"article:tag","content":"Spring MVC"}],["meta",{"property":"article:published_time","content":"2021-10-08T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-07-31T02:27:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"参数解析器\\",\\"image\\":[\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/1711028501951-d34963ff-5fc9-46b5-89d4-b68f3059bb91.png\\"],\\"datePublished\\":\\"2021-10-08T00:00:00.000Z\\",\\"dateModified\\":\\"2024-07-31T02:27:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mozzie\\",\\"url\\":\\"https://du-mozzie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"@RequestParam","slug":"requestparam","link":"#requestparam","children":[]},{"level":2,"title":"@PathVariable","slug":"pathvariable","link":"#pathvariable","children":[]},{"level":2,"title":"@RequestHeader","slug":"requestheader","link":"#requestheader","children":[]},{"level":2,"title":"@CookieValue","slug":"cookievalue","link":"#cookievalue","children":[]},{"level":2,"title":"@Value","slug":"value","link":"#value","children":[]},{"level":2,"title":"HttpServletRequest","slug":"httpservletrequest","link":"#httpservletrequest","children":[]},{"level":2,"title":"@ModelAttribute","slug":"modelattribute","link":"#modelattribute","children":[]},{"level":2,"title":"@RequestBody","slug":"requestbody","link":"#requestbody","children":[]}],"git":{"createdTime":1721985040000,"updatedTime":1722392862000,"contributors":[{"name":"du","email":"25484255238@qq.com","commits":4}]},"readingTime":{"minutes":10.48,"words":3143},"filePathRelative":"code/spring/mvc/parameter-resolver.md","localizedDate":"2021年10月8日","excerpt":"<p>Spring 提供了许多种类的控制器方法参数解析器</p>","autoDesc":true}');export{r as comp,d as data};
