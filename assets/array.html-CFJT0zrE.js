import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,h as t}from"./app-C4PvnGal.js";const e={},p=t(`<h1 id="数组" tabindex="-1"><a class="header-anchor" href="#数组"><span>数组</span></a></h1><p>数组就是一种可以存储大量数据类型相同的变量的数据结构，数组就是一个具有相同数据类型的数据集合。</p><p>数组中的数据必须是同一种数据类型的。</p><h2 id="_1、数组的基本要素" tabindex="-1"><a class="header-anchor" href="#_1、数组的基本要素"><span>1、数组的基本要素</span></a></h2><ul><li>数组名称</li><li>数组元素</li><li>元素下标</li><li>数据类型</li></ul><p>数组本身就是一个变量，数组名称就是变量名，数组中保存的每一个数据都会有一个下标（从 0 开始）</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">//声明数组</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array<span class="token punctuation">;</span>
<span class="token comment">//分配内存空间</span>
array <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token comment">//给数组赋值</span>
array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>
array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span>

<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array2 <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> array3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2、数组常见的错误" tabindex="-1"><a class="header-anchor" href="#_2、数组常见的错误"><span>2、数组常见的错误</span></a></h2><ul><li>数据类型不匹配。求数组的最小值</li><li>边声明边赋值的方式，代码必须写在同一行，不能换行。</li><li>数组下标越界。</li></ul><h2 id="_3、数组的常用操作及方法" tabindex="-1"><a class="header-anchor" href="#_3、数组的常用操作及方法"><span>3、数组的常用操作及方法</span></a></h2><ul><li>求数组的最大值</li><li>求数组的最小值</li><li>在数组的指定位置插入数据</li><li>对数组进行排序</li></ul><h2 id="_4、二维数组" tabindex="-1"><a class="header-anchor" href="#_4、二维数组"><span>4、二维数组</span></a></h2><p>二维数组简单理解即一维数组中保存的值是另外一个一维数组。</p><p>变量、数据类型、流程控制、循环、数组。</p>`,14),o=[p];function c(l,i){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","array.html.vue"]]),k=JSON.parse('{"path":"/code/java/array.html","title":"数组","lang":"zh-CN","frontmatter":{"order":4,"title":"数组","date":"2021-03-05T00:00:00.000Z","category":"Java","tag":"Java","timeline":true,"article":true,"description":"数组 数组就是一种可以存储大量数据类型相同的变量的数据结构，数组就是一个具有相同数据类型的数据集合。 数组中的数据必须是同一种数据类型的。 1、数组的基本要素 数组名称 数组元素 元素下标 数据类型 数组本身就是一个变量，数组名称就是变量名，数组中保存的每一个数据都会有一个下标（从 0 开始） 2、数组常见的错误 数据类型不匹配。求数组的最小值 边声明...","head":[["meta",{"property":"og:url","content":"https://du-mozzie.github.io/code/java/array.html"}],["meta",{"property":"og:title","content":"数组"}],["meta",{"property":"og:description","content":"数组 数组就是一种可以存储大量数据类型相同的变量的数据结构，数组就是一个具有相同数据类型的数据集合。 数组中的数据必须是同一种数据类型的。 1、数组的基本要素 数组名称 数组元素 元素下标 数据类型 数组本身就是一个变量，数组名称就是变量名，数组中保存的每一个数据都会有一个下标（从 0 开始） 2、数组常见的错误 数据类型不匹配。求数组的最小值 边声明..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-27T07:12:59.000Z"}],["meta",{"property":"article:author","content":"mozzie"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:published_time","content":"2021-03-05T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-05-27T07:12:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数组\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-03-05T00:00:00.000Z\\",\\"dateModified\\":\\"2024-05-27T07:12:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mozzie\\",\\"url\\":\\"https://du-mozzie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1、数组的基本要素","slug":"_1、数组的基本要素","link":"#_1、数组的基本要素","children":[]},{"level":2,"title":"2、数组常见的错误","slug":"_2、数组常见的错误","link":"#_2、数组常见的错误","children":[]},{"level":2,"title":"3、数组的常用操作及方法","slug":"_3、数组的常用操作及方法","link":"#_3、数组的常用操作及方法","children":[]},{"level":2,"title":"4、二维数组","slug":"_4、二维数组","link":"#_4、二维数组","children":[]}],"git":{"createdTime":1716652325000,"updatedTime":1716793979000,"contributors":[{"name":"du","email":"25484255238@qq.com","commits":3}]},"readingTime":{"minutes":1.16,"words":347},"filePathRelative":"code/java/array.md","localizedDate":"2021年3月5日","excerpt":"\\n<p>数组就是一种可以存储大量数据类型相同的变量的数据结构，数组就是一个具有相同数据类型的数据集合。</p>","autoDesc":true}');export{d as comp,k as data};
