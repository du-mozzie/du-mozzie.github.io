import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as l,c as r,b as e,d as i,e as n,h as a}from"./app-C1oZd5hh.js";const d={},c=e("p",null,"安装青龙面板，自动执行一些签到脚本",-1),m=e("h2",{id:"安装青龙",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#安装青龙"},[e("span",null,"安装青龙")])],-1),u=e("ol",null,[e("li",null,"我是基于1Panel安装的，在1Panel应用商店有青龙面板，直接一键安装")],-1),g=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107140706790.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),p={start:"2"},v=e("li",null,[e("p",null,"初始化青龙，直接IP + 端口访问青龙面板（如果是云服务器记得开放端口）"),e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107141047125.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")])],-1),h={href:"https://www.pushplus.plus/",target:"_blank",rel:"noopener noreferrer"},b=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107141119459.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),f=e("li",null,[e("p",null,"设置一下账号密码，登录青龙")],-1),z=a(`<h2 id="安装依赖" tabindex="-1"><a class="header-anchor" href="#安装依赖"><span>安装依赖</span></a></h2><ol><li><p>依赖管理-&gt;创建依赖，选择自动拆分</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107142001490.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>NodeJs依赖</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>crypto-js
prettytable
dotenv
jsdom
date-fns
tough-cookie
tslib
ws@7.4.3
ts-md5
jsdom -g
jieba
fs
form-data
json5
global-agent
png-js
@types/node
require
typescript
js-base64
axios
cheerio
data-fns
node-jsencrypt
node-rsa
node-fetch
qs
ds
yml2213-utils
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Python3依赖</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>requests
canvas
ping3
jieba
aiohttp
bs4
userAgent
selenium
PyExecJS
redis
Pycryptodome
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Linux依赖</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>bizCode
bizMsg
lxml
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p>等待一会依赖安装完成，如果安装太慢可以自己配置一下镜像加速，有安装失败的可以查看安装日志解决一下</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107162238752.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code># Node 软件包镜像源
https://registry.npmmirror.com

# Python 软件包镜像源
https://mirrors.aliyun.com/pypi/simple/

# Linux 软件包镜像源
https://mirrors.aliyun.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拉取faker仓库并配置" tabindex="-1"><a class="header-anchor" href="#拉取faker仓库并配置"><span>拉取Faker仓库并配置</span></a></h2>`,6),_={href:"https://github.com/shufflewzc",target:"_blank",rel:"noopener noreferrer"},x=a(`<div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>复制以下拉库命令即可。

Faker2 助力池版【安全本地sign防CK泄漏】使用助力池请在群里发&quot;助力池&quot; 机器人自动回复教程
ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker2.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;

Faker3 内部互助版【安全本地sign防CK泄漏】
ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;

Faker4 纯净版 仅包含少量日常内部助力任务 防止运行过多任务掉ck 适合安静挂机
ql repo https://git.metauniverse-cn.com/https://github.com/shufflewzc/faker4.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>配置Faker</strong></p><ol><li><p>订阅任务</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107142920124.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>配置任务，直接复制上面的脚本即可，我选择的是<code>Faker4</code></p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143119647.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>配置定时规则 <code>0 3,14 * * *</code>，凌晨三点，下午两点更新任务</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143329495.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>到这边Faker仓库就已经配置完成了，可以手动运行一次订阅任务</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143501964.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>在青龙初始化的时候我们配置了pushplus推送消息，订阅任务执行完成的时候可以在pushplus的公众号收到消息通知</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144203125.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ol><p><strong>配置京东 Cookie</strong></p>`,4),y={href:"https://m.jd.com/",target:"_blank",rel:"noopener noreferrer"},k=e("figure",null,[e("img",{src:"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144321487.png",alt:"",tabindex:"0",loading:"lazy"}),e("figcaption")],-1),P=a('<li><p>登录后按F12打开浏览器的控制台，选择<code>Application</code> -&gt; <code>Cookies</code> -&gt; <code>my.m.jd.com</code> 这个域，找到 <code>pt_key</code>、<code>pt_pin</code></p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144533325.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li><li><p>配置环境变量，名称为：JD_COOKIE，值为：pt_key=xxxxxxxxxxxxxxx;pt_pin=xxxxxxx;具体信息为你在Cookie中看到的信息。</p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144644984.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144752360.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li>',2),w=e("p",null,"到这一步，基本上的配置就已经完成了，青龙面板本质上是一个任务管理平台，我们也可以去GitHub找一些其他的脚本来执行。",-1);function q(j,G){const t=o("ExternalLinkIcon");return l(),r("div",null,[c,m,u,g,e("ol",p,[v,e("li",null,[e("p",null,[i("配置通知服务，我这边用的是"),e("a",h,[i("pushplus"),n(t)]),i("，填写自己的token即可")]),b]),f]),z,e("p",null,[e("a",_,[i("GitHub Faker 仓库地址"),n(t)])]),x,e("ol",null,[e("li",null,[e("p",null,[i("浏览器打开"),e("a",y,[i("m.jd.com"),n(t)]),i(" 登录账号")]),k]),P]),w])}const C=s(d,[["render",q],["__file","qinglong.html.vue"]]),F=JSON.parse('{"path":"/code/notes/wool/qinglong.html","title":"青龙-京东faker仓库","lang":"zh-CN","frontmatter":{"order":1,"title":"青龙-京东faker仓库","date":"2025-01-07T00:00:00.000Z","category":["羊毛","青龙"],"tag":["羊毛","青龙"],"timeline":true,"article":true,"prev":"./","description":"安装青龙面板，自动执行一些签到脚本 安装青龙 我是基于1Panel安装的，在1Panel应用商店有青龙面板，直接一键安装 初始化青龙，直接IP + 端口访问青龙面板（如果是云服务器记得开放端口） 配置通知服务，我这边用的是pushplus，填写自己的token即可 设置一下账号密码，登录青龙 安装依赖 依赖管理->创建依赖，选择自动拆分 NodeJs依...","head":[["meta",{"property":"og:url","content":"https://du-mozzie.github.io/code/notes/wool/qinglong.html"}],["meta",{"property":"og:title","content":"青龙-京东faker仓库"}],["meta",{"property":"og:description","content":"安装青龙面板，自动执行一些签到脚本 安装青龙 我是基于1Panel安装的，在1Panel应用商店有青龙面板，直接一键安装 初始化青龙，直接IP + 端口访问青龙面板（如果是云服务器记得开放端口） 配置通知服务，我这边用的是pushplus，填写自己的token即可 设置一下账号密码，登录青龙 安装依赖 依赖管理->创建依赖，选择自动拆分 NodeJs依..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107140706790.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-08T01:22:12.000Z"}],["meta",{"property":"article:author","content":"mozzie"}],["meta",{"property":"article:tag","content":"羊毛"}],["meta",{"property":"article:tag","content":"青龙"}],["meta",{"property":"article:published_time","content":"2025-01-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-08T01:22:12.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"青龙-京东faker仓库\\",\\"image\\":[\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107140706790.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107141047125.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107141119459.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107142001490.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107162238752.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107142920124.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143119647.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143329495.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107143501964.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144203125.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144321487.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144533325.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144644984.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/image-20250107144752360.png\\"],\\"datePublished\\":\\"2025-01-07T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-08T01:22:12.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mozzie\\",\\"url\\":\\"https://du-mozzie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"安装青龙","slug":"安装青龙","link":"#安装青龙","children":[]},{"level":2,"title":"安装依赖","slug":"安装依赖","link":"#安装依赖","children":[]},{"level":2,"title":"拉取Faker仓库并配置","slug":"拉取faker仓库并配置","link":"#拉取faker仓库并配置","children":[]}],"git":{"createdTime":1736230527000,"updatedTime":1736299332000,"contributors":[{"name":"mozzie","email":"du.mozzie@outlook.com","commits":4}]},"readingTime":{"minutes":2.68,"words":804},"filePathRelative":"code/notes/wool/qinglong.md","localizedDate":"2025年1月7日","excerpt":"<p>安装青龙面板，自动执行一些签到脚本</p>","autoDesc":true}');export{C as comp,F as data};
