import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as t,c,b as e,d as n,e as l,h as d}from"./app-DfyAaO8Z.js";const p={},i={href:"https://www.elastic.co/guide/en/elasticsearch/reference/7.0/index-lifecycle-management.html",target:"_blank",rel:"noopener noreferrer"},r=d(`<ul><li>当索引达到一定的大小或者一定的文档数量时生成一个新的索引</li><li>每天、每周或者每个月创建一个新索引、并把之前的索引归档</li><li>删除历史索引、按照数据保留标准执行是否保留索引</li></ul><h2 id="基础理论" tabindex="-1"><a class="header-anchor" href="#基础理论"><span>基础理论</span></a></h2><p>在ILM策略期间可以触发的操作有：<strong>Set Priority，Unfollow，Rollover，Read-only，Shrink，Force merge，Searchable snapshot，Allocate，Migrate，Wait for snapshot，Delete</strong></p><p>下面是每个操作具体的含义</p><ul><li><p><code>Set Priority</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Warm</code>，<code>Cold</code></p></blockquote><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502120014083.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>设置步骤的优先级</p><p>必须参数，设置索引优先级，大于等于<code>0</code>的整数；设置为<code>null</code>删除优先级；<code>Hot</code>阶段应具有最高值，<code>Cold</code>应具有最低值；例如<code>Hot 100</code>，<code>Warm 50</code>，<code>Cold 0</code>；未设置此值的索引优先级默认为<code>1</code></p></li><li><p><code>Unfollow</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Warm</code>，<code>Cold</code>，<code>Frozen</code></p></blockquote><p>跨集群索引设置为标准索引，可以使<code>shrink</code>、<code>rollover</code>、<code>searchable snapshot</code> 操作安全的在<code>follower</code>索引上执行；</p><p>在整个生命周期中移动<code>follower</code>索引时，也可以直接使用<code>unfollow</code>，对于不是<code>follower</code>索引的没有影响、阶段执行中只是跳转到下一个操作</p><blockquote><p>当<code>shrink</code>、<code>rollover</code>、<code>searchable snapshot</code> 应用于<code>follower</code>索引时，该操作会自动触发</p></blockquote><p><code>follower</code>索引安全转换为标准索引需要满足以下条件</p><ul><li><code>leader</code> 索引 <code>index.lifecycle.indexing_complete</code>设置为<code>true</code>。如果是<code>rollover</code>操作，则会自动设置此设置，或者使用<code>index settings api</code>手动设置</li><li>对<code>leader</code> 索引执行的操作都已经复制到<code>follower</code>索引，这样可以确保在转换索引时不会丢失任何操作</li></ul><p>当上述条件都满足后，<code>unfollow</code>将执行以下操作</p><ul><li>暂停<code>follower</code>索引的索引</li><li>关闭<code>follower</code>索引</li><li>取消 <code>leader</code>索引</li><li>打开<code>follower</code>索引（此时是标准索引）</li></ul></li><li><p><code>Rollover</code></p><p>滚动策略，也就是按照策略递增的实现方式；</p><p>当前索引达到一定的大小、或者一定文档的数量或者年龄时自动创建一个新的写索引</p><blockquote><p>可应用阶段：<code>Hot</code></p><p>如果该操作是在<code>follower</code>索引上执行，那么该操作将等待<code>leader</code> 索引执行该操作完成</p></blockquote><p><code>rollover</code>的目标可以是数据流或者索引别名</p><p>当滚动目标是<code>数据流</code>时，这个生成的新索引将成为数据流的写入索引，并且索引名是<code>递增</code>的</p><p>当滚动目前是<code>索引别名</code>时，别名以及其写索引<strong>需要满足以下条件(重要!!!重要!!!重要!!!)</strong></p><ul><li>索引名称必须满足如下匹配规则*<code>^.\\*-\\d+$</code>*</li><li>索引的滚动目标别名<code>index.lifecycle.rollover_alias</code>必须要设置</li><li>该索引必须是索引的<code>写入</code>索引</li></ul><p>例如：索引<code>my-index-001</code>别名为<code>my_data</code>，如下配置是必须的</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>text 代码解读复制代码PUT my-index-001
{
  &quot;settings&quot;: {
    &quot;index.lifecycle.name&quot;: &quot;my_policy&quot;,
    &quot;index.lifecycle.rollover_alias&quot;: &quot;my_data&quot;
  },
  &quot;aliases&quot;: {
    &quot;my_data&quot;: {
      &quot;is_write_index&quot;: true
    }
  }
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面我们看到<code>rollover</code>的操作需要满足一种条件，那么我们必须至少设置一种滚动条件</p><ul><li><p><code>max_age</code>：从索引创建之日起开始计算时间，满足之后触发滚动操作。例如<code>1d</code>，<code>7d</code>，<code>30d</code>；即使我们通过<code>index.lifecycle.parse_origination_date</code>或者<code>index.lifecycle.origination_date</code>来设置索引的起始日期，计算时也是按照<strong>索引创建时的日期</strong></p></li><li><p><code>max_docs</code>：达到指定的<strong>最大文档数量</strong>之后触发滚动操作。上一次<code>refresh</code>之后的文档不计数，副本分片中的文档也不计数</p></li><li><p><code>max_size</code>：当索引中<strong>所有的主分片之和</strong>达到一定的大小时触发滚动操作，副本分片不计算入最大索引大小</p><blockquote><p>在使用<code>_cat API </code>时，<code>pri.store.size</code>的值就是主分片的大小</p></blockquote></li><li><p><code>max_primary_shard_size</code>：当索引中最大的主分片达到一定的大小时触发滚动操作，这是索引中<strong>最大主分片的最大大小</strong>。与<code>max_size</code>一样，副本分片大小也不计入其中</p></li></ul></li><li><p><code>Read-only</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Warm</code>，<code>Cold</code></p></blockquote><p>使索引变为<strong>只读</strong>索引，如果要在<code>Hot</code>阶段执行<code>Read-only</code>操作，前提是必须执行<code>rollover</code>操作，如果没有配置<code>rollover</code>操作，<strong>ILM</strong>将拒绝<code>Read-only</code>策略</p></li><li><p><code>Shrink</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Warm</code></p></blockquote><p>前提：将源索引设置为只读；所有分片必须在同一个节点上；集群健康状态为 <code>Green</code>；</p><p>减少索引分片的数量或者减少主分片的数量，生成的索引名为<code>shrink-&lt;random-uuid&gt;-&lt;original-index-name&gt;</code>,分片数量使用如下参数控制</p><ul><li><code>number_of_shards</code>：可选整数类型，必须为现有索引分片数整除的数字，与<code>max_primary_shard_size</code>不兼容，只能设置一个</li><li><code>max_primary_shard_size</code>：可选字节单位（<strong>b,kb,mb,gb,tb,pb</strong>），目标索引的最大主分片的大小，用于查找目标索引的最大分片数，设置此参数后，每个分片在目标索引的存储占用不会大于该参数</li></ul></li><li><p><code>Force merge</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Warm</code></p></blockquote><p>合并索引中的<code>segments</code>到指定的最大段数，此操作会将索引设置为<code>Read-only</code>；强制合并会尽最大的努力去合并，如果此时有的分片在重新分配，那么该分片是无法被合并的</p><p>如果我们要在<code>Hot</code>阶段执行<code>Force merge</code> 操作，<code>rollover</code>操作是必须的，如果没有配置<code>rollover</code>，<strong>ILM</strong>会拒绝该策略</p><ul><li><code>max_num_segments</code>：必须的整数类型，表示要合并到的<code>segments</code>数量，如果要完全合并索引，需要设置值为<code>1</code></li><li><code>index_codec</code>：可选字符串参数，压缩文档的编解码器，只能设置<code>best_compression</code>，它可以获得更高的压缩比，但是存储性能较差。该参数默认值<code>LZ4</code>，如果要使用<code>LZ4</code>，此参数可不用设置</li></ul></li><li><p><code>Searchable snapshot</code></p><blockquote><p>可应用阶段：<code>Hot</code>，<code>Cold</code>，<code>Forzen</code></p></blockquote><p>将快照挂载为可搜索的索引。如果索引是数据流的一部分，则挂载的索引将替换数据流中的原始索引</p><p>Searchable snapshot操作绑定对应的数据层，也就是（<strong>Hot-Warm-Cold-Forzen-Delete</strong>），恢复数据时直接恢复到对应的数据层，该操作使用<code>index.routing.allocation.include._tier_preference</code>设置，在冻结层（<strong>frozen</strong>）该操作会将前缀为<code>partial-</code>的部分数据恢复到冻结层，在其他层，会将前缀为<code>restored-</code>的全部数据恢复到对应层</p></li><li><p><code>Allocate</code></p><blockquote><p>可应用阶段：<code>Warm</code>，<code>Cold</code></p></blockquote><p>设定副本数量，修改分片分配规则。将分片移动到不同性能特征的节点上并减少副本的数量，该操作不可在<code>Hot</code>阶段执行，初始的分配必须通过手动设置或者索引模版设置。如果配置该设置必须指定副本的数量，或者至少指定如下操作的一个(<strong>include,exclude,require</strong>)，如果不设置分配策略即空的分配策略是无效的</p><ul><li><code>number_of_replicas</code>：整数类型，分配给索引的副本数</li><li><code>total_shards_per_node</code>：单个<strong>ES</strong>节点上索引最大分片数，<code>-1</code>代表没有限制</li><li><code>include</code>：为至少具有一个自定义属性的节点分配索引</li><li><code>exclude</code>：为没有指定自定义属性的节点分配索引</li><li><code>require</code>：为具有所有指定自定义属性的节点分配索引</li></ul><p><code>elasticsearch.yml</code> 中自定义属性</p><div class="language-yaml line-numbers-mode" data-ext="yml" data-title="yml"><pre class="language-yaml"><code>yaml 代码解读复制代码<span class="token comment"># 节点增加属性，在elasticsearch.yml里面</span>
node.attr.<span class="token punctuation">{</span>attribute<span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>value<span class="token punctuation">}</span>
<span class="token comment"># 例如：增加一个node_type属性</span>
<span class="token key atrule">node.attr.node_type</span><span class="token punctuation">:</span> hot
<span class="token comment"># 索引分配过滤器设置</span>
index.routing.allocation.include.<span class="token punctuation">{</span>attribute<span class="token punctuation">}</span>
index.routing.allocation.exclude.<span class="token punctuation">{</span>attribute<span class="token punctuation">}</span>
index.routing.allocation.require.<span class="token punctuation">{</span>attribute<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><code>Migrate</code></p><blockquote><p>可应用阶段：<code>Warm</code>，<code>Cold</code></p></blockquote><p>通过更新<code>index.routing.allocation.include._tier_preference</code>设置，将索引移动到当前阶段对应的数据层</p><p><strong>ILM</strong>自动的在<code>Warm</code>和<code>Cold</code>阶段开启该操作，如果我们不想自动开启可以通过设置<code>enabled</code>为<code>false</code>来关闭</p><ul><li>如果在<code>Cold</code>阶段定义了一个可搜索的快照（<strong>Searchable snapshot</strong>）动作，那么将不会自动注入<code>Migrate</code>操作，因为<code>Migrate</code>与<code>Searchable snapshot</code>使用相同的<code>index.routing.allocation.include._tier_preference</code>设置</li><li>在<code>Warm</code>阶段，<code>Migrate</code>操作会设置<code>index.routing.allocation.include._tier_preference</code>为<code>data_warm</code>,<code>data_hot</code>。意思就是这会将索引移动到<code>Warm</code>层的节点上，如果<code>Warm</code>层没有，那就返回到<code>Hot</code>层节点</li><li>在<code>Cold</code>阶段，<code>Migrate</code>操作会设置<code>index.routing.allocation.include._tier_preference</code>为<code>data_cold</code>,<code>data_warm</code>,<code>data_hot</code>。这会将索引移动到<code>Cold</code>层，如果<code>Cold</code>层没有返回到<code>Warm</code>层，如果还没有可用的节点，返回到<code>Hot</code>层</li><li>在<code>Frozen</code>阶段不允许迁移操作，<code>Migrate</code>操作会设置<code>index.routing.allocation.include._tier_preference</code>为<code>data_frozen</code>,<code>data_cold</code>,<code>data_warm</code>,<code>data_hot</code>。冻结阶段直接使用此配置挂载可搜索的镜像，这会将索引移动到(<code>frozen</code>)冻结层，如果冻结层没有节点，它会返回<code>Cold</code>层，依次是<code>Warm</code>层，<code>Hot</code>层</li><li>在<code>Hot</code>阶段是不被允许迁移操作的，初始的索引分配是自动执行的，我们也可以通过索引模版配置</li></ul><p>该阶段可选的配置参数如下</p><ul><li><code>enabled</code>：可选布尔值，控制<strong>ILM</strong>是否在此阶段迁移索引，默认<code>true</code></li></ul></li><li><p><code>Wait for snapshot</code></p><blockquote><p>可应用阶段：<code>Delete</code></p></blockquote><p>在删除索引之前等待指定的<code>SLM</code>策略执行，这样可以确保已删除索引的快照是可用的</p><ul><li><code>policy</code>：必须的字符串参数，删除操作应等待的SLM策略的名称</li></ul></li><li><p><code>Delete</code></p><blockquote><p>可应用阶段：<code>Delete</code></p></blockquote><p>永久的删除索引</p><ul><li><code>delete_searchable_snapshot</code>：删除在上一个阶段创建的可搜索快照，默认<code>true</code></li></ul></li></ul><p>ILM可以很轻松的管理索引的各个阶段，常见的就是处理日志类型或者度量值等时间序列的数据</p><blockquote><p>需要注意的是,<strong>ILM</strong>要生效的前提是集群中所有的节点都必须是使用相同的版本。虽说可以在混合版本汇中创建或者应用<strong>ILM</strong>，但是不能保证<strong>ILM</strong>按照预期的策略执行</p></blockquote><p>下面我们就详细说一下索引生命周期的几个阶段</p><ul><li>Hot：频繁的查询、更新</li><li>Warm：索引不在被更新、但是还有查询</li><li>Cold：索引不在被更新、但是还有少量查询，索引的内容仍然需要被检索、检索的速度快慢没关系</li><li>Frozen：索引不在被更新、但是还有少量查询，索引的内容仍然需要被检索、检索的速度非常慢也没关系</li><li>Delete：索引不在需要，可以安全的删除</li></ul><p>在上面的这几个阶段中，每个阶段的执行操作是不同的以及从一个阶段转到另一个阶段的时间也是不固定的</p><table><thead><tr><th>操作</th><th>Hot</th><th>Warm</th><th>Cold</th><th>Frozen</th><th>Delete</th></tr></thead><tbody><tr><td>Set Priority</td><td>✓</td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>Unfollo</td><td>✓</td><td>✓</td><td>✓</td><td>✓</td><td></td></tr><tr><td>Rollove</td><td>✓</td><td></td><td></td><td></td><td></td></tr><tr><td>Read-only</td><td>✓</td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>Shrink</td><td>✓</td><td>✓</td><td></td><td></td><td></td></tr><tr><td>Force merge</td><td>✓</td><td>✓</td><td></td><td></td><td></td></tr><tr><td>Searchable snapshot</td><td>✓</td><td></td><td>✓</td><td>✓</td><td></td></tr><tr><td>Allocate</td><td></td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>Migrate</td><td></td><td>✓</td><td>✓</td><td></td><td></td></tr><tr><td>Wait for snapshot</td><td></td><td></td><td></td><td></td><td>✓</td></tr><tr><td>Delete</td><td></td><td></td><td></td><td></td><td>✓</td></tr></tbody></table><h2 id="配置步骤" tabindex="-1"><a class="header-anchor" href="#配置步骤"><span>配置步骤</span></a></h2><ol><li><p>配置分片分配感知</p><p>可以通过启动参数或在 elasticsearch.yml 配置文件中完成。例如：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 启动参数</span>
bin/elasticsearch <span class="token parameter variable">-Enode.attr.data</span><span class="token operator">=</span>hot
bin/elasticsearch <span class="token parameter variable">-Enode.attr.data</span><span class="token operator">=</span>warm
bin/elasticsearch <span class="token parameter variable">-Enode.attr.data</span><span class="token operator">=</span>cold

<span class="token comment">#配置方法</span>
<span class="token function">vim</span>  /etc/elasticsearch/elasticsearch.yml
 
<span class="token comment">#每个热节点加入如下配置并重启服务 hot、warm、cold</span>
node.attr.box_type: hot
node.attr.rack: rack1
<span class="token comment">#这两项配置是为节点增加标签，具体名称并不是写死的，与后面模板和策略配置有关</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>配置ILM策略</p><p>ILM 策略分为四个主要阶段 - 热、温、冷和删除。不需要在一个策略中定义每个阶段，ILM 会始终按该顺序执行各个阶段（跳过任何未定义的阶段）。</p><p>一个比较完整的策略：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>PUT _ilm/policy/hot-warm-cold-delete-60days
<span class="token punctuation">{</span>
  <span class="token property">&quot;policy&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;phases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;hot&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;rollover&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;max_size&quot;</span><span class="token operator">:</span><span class="token string">&quot;50gb&quot;</span><span class="token punctuation">,</span>
            <span class="token property">&quot;max_age&quot;</span><span class="token operator">:</span><span class="token string">&quot;30d&quot;</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;set_priority&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">50</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;warm&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;min_age&quot;</span><span class="token operator">:</span><span class="token string">&quot;7d&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;forcemerge&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;max_num_segments&quot;</span><span class="token operator">:</span><span class="token number">1</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;shrink&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span><span class="token number">1</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;allocate&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;warm&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;set_priority&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">25</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;cold&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;min_age&quot;</span><span class="token operator">:</span><span class="token string">&quot;30d&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;set_priority&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;priority&quot;</span><span class="token operator">:</span><span class="token number">0</span>
          <span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;freeze&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
          <span class="token property">&quot;allocate&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token property">&quot;require&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
              <span class="token property">&quot;data&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cold&quot;</span>
            <span class="token punctuation">}</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token property">&quot;delete&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;min_age&quot;</span><span class="token operator">:</span><span class="token string">&quot;60d&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;actions&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
          <span class="token property">&quot;delete&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建索引模板</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>PUT _template/bash_template
<span class="token punctuation">{</span>
 <span class="token property">&quot;index_patterns&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;bash-*&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> #指定以 bash-* 开头的index遵循该模板规则
 <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
 <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>  #指定索引的分片
 <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> #指定索引的副本
 <span class="token property">&quot;index.lifecycle.name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bash_policy&quot;</span><span class="token punctuation">,</span> #指定索引生命周期策略名称
 <span class="token property">&quot;index.lifecycle.rollover_alias&quot;</span><span class="token operator">:</span> <span class="token string">&quot;bash&quot;</span><span class="token punctuation">,</span> #指定rollover别名（索引写入与读取时所用的名称）
 <span class="token property">&quot;routing.allocation.require.box_type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;hot&quot;</span> #指定索引新建时所分配的节点（此项不指定会默认分配到所有节点<span class="token punctuation">,</span>当没有指定节点属性时无需指定该参数）
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>创建一个索引，按照索引模板命名规则</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code>PUT bash-test
<span class="token punctuation">{</span>
  <span class="token property">&quot;settings&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;number_of_shards&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token property">&quot;number_of_replicas&quot;</span><span class="token operator">:</span> <span class="token number">0</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;aliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;zuiyu-index&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><p><strong>除了使用api创建还可以使用kibana提供的界面创建</strong></p><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502121006580.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502121007482.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,16);function u(m,v){const o=a("ExternalLinkIcon");return t(),c("div",null,[e("p",null,[e("a",i,[n("索引生命周期管理 (ILM)"),l(o)]),n(" 是在 Elasticsearch 6.6（公测版）首次引入并在 6.7 版正式推出的一项功能。ILM 是 Elasticsearch 的一部分，主要用来帮助您管理索引。我们可以使用ILM实现如下需求：")]),r])}const g=s(p,[["render",u],["__file","ilm.html.vue"]]),q=JSON.parse('{"path":"/code/distributed/elasticsearch/ilm.html","title":"ILM索引生命周期管理","lang":"zh-CN","frontmatter":{"order":4,"title":"ILM索引生命周期管理","date":"2022-03-20T00:00:00.000Z","category":["ElasticSearch","分布式","搜索引擎"],"tag":["ElasticSearch","分布式","搜索引擎"],"timeline":true,"article":true,"description":"索引生命周期管理 (ILM) 是在 Elasticsearch 6.6（公测版）首次引入并在 6.7 版正式推出的一项功能。ILM 是 Elasticsearch 的一部分，主要用来帮助您管理索引。我们可以使用ILM实现如下需求： 当索引达到一定的大小或者一定的文档数量时生成一个新的索引 每天、每周或者每个月创建一个新索引、并把之前的索引归档 删除历史...","head":[["meta",{"property":"og:url","content":"https://du-mozzie.github.io/code/distributed/elasticsearch/ilm.html"}],["meta",{"property":"og:title","content":"ILM索引生命周期管理"}],["meta",{"property":"og:description","content":"索引生命周期管理 (ILM) 是在 Elasticsearch 6.6（公测版）首次引入并在 6.7 版正式推出的一项功能。ILM 是 Elasticsearch 的一部分，主要用来帮助您管理索引。我们可以使用ILM实现如下需求： 当索引达到一定的大小或者一定的文档数量时生成一个新的索引 每天、每周或者每个月创建一个新索引、并把之前的索引归档 删除历史..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502120014083.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-12T02:07:38.000Z"}],["meta",{"property":"article:author","content":"mozzie"}],["meta",{"property":"article:tag","content":"ElasticSearch"}],["meta",{"property":"article:tag","content":"分布式"}],["meta",{"property":"article:tag","content":"搜索引擎"}],["meta",{"property":"article:published_time","content":"2022-03-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-12T02:07:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ILM索引生命周期管理\\",\\"image\\":[\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502120014083.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502121006580.png\\",\\"https://raw.githubusercontent.com/du-mozzie/PicGo/master/images/202502121007482.png\\"],\\"datePublished\\":\\"2022-03-20T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-12T02:07:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"mozzie\\",\\"url\\":\\"https://du-mozzie.github.io\\"}]}"]]},"headers":[{"level":2,"title":"基础理论","slug":"基础理论","link":"#基础理论","children":[]},{"level":2,"title":"配置步骤","slug":"配置步骤","link":"#配置步骤","children":[]}],"git":{"createdTime":1739290719000,"updatedTime":1739326058000,"contributors":[{"name":"mozzie","email":"du.mozzie@outlook.com","commits":2}]},"readingTime":{"minutes":10.5,"words":3151},"filePathRelative":"code/distributed/elasticsearch/ilm.md","localizedDate":"2022年3月20日","excerpt":"<p><a href=\\"https://www.elastic.co/guide/en/elasticsearch/reference/7.0/index-lifecycle-management.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">索引生命周期管理 (ILM)</a> 是在 Elasticsearch 6.6（公测版）首次引入并在 6.7 版正式推出的一项功能。ILM 是 Elasticsearch 的一部分，主要用来帮助您管理索引。我们可以使用ILM实现如下需求：</p>","autoDesc":true}');export{g as comp,q as data};
